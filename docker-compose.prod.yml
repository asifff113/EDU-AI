services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - eduai_network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - eduai_network
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - PORT=4000
      - JWT_SECRET=${JWT_SECRET}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - GOOGLE_AI_KEY=${GOOGLE_AI_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - eduai_network
    volumes:
      - ./uploads:/app/uploads

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=/api
      - NODE_ENV=production
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - eduai_network

  nginx:
    image: nginx:1.27-alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - web
      - api
    restart: unless-stopped
    networks:
      - eduai_network

volumes:
  postgres_data:
  redis_data:

networks:
  eduai_network:
    driver: bridge
